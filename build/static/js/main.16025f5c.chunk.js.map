{"version":3,"sources":["components/filter.js","components/form.js","components/person.js","services/number.js","components/message.js","App.js","index.js"],"names":["Filter","handle","onChange","PersonForm","handleAdd","handlePerson","handleNumber","onSubmit","type","Person","list","handleDeletion","map","person","key","name","phone","onClick","id","baseUrl","numberService","getAll","axios","get","then","response","data","create","newObject","post","update","put","deleteNumber","delete","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","show","setShow","setMessage","setType","filterPersons","filter","toLowerCase","startsWith","useEffect","initialPersons","event","target","value","preventDefault","console","log","filterFind","length","nameObject","returnPerson","concat","setTimeout","catch","error","window","confirm","updatePerson","deletePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16025f5c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({handle}) => {\r\n  return (\r\n    <div>\r\n      <input onChange={handle} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filter","import React from 'react';\r\n\r\nconst PersonForm = ({handleAdd, handlePerson, handleNumber}) => {\r\n  return (\r\n    <form onSubmit={handleAdd}>\r\n      <div>\r\n        name: <input \r\n        onChange={handlePerson}\r\n        />\r\n      </div>\r\n      <div>number: <input \r\n        onChange={handleNumber}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react';\r\n\r\nconst Person = ({list, handleDeletion}) => {\r\n  return (\r\n    list.map(person => \r\n      <div key={person.name}>\r\n        {person.name} {person.phone}\r\n        <button onClick={() => handleDeletion(person.name, person.id)}>delete</button>\r\n      </div>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteNumber = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst numberService = { getAll, create, update, deleteNumber }\r\nexport default numberService","import React from 'react';\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={type}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, {useState, useEffect} from 'react'\r\nimport Filter from './components/filter'\r\nimport PersonForm from './components/form'\r\nimport Person from './components/person'\r\nimport numberService from './services/number'\r\nimport Notification from './components/message'\r\n\r\nconst App = (data) => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNum, setNewNum] = useState('')\r\n  const [show, setShow] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [type, setType] = useState('')\r\n  let filterPersons = persons.filter(person => person.name.toLowerCase().startsWith(show.toLowerCase()))\r\n\r\n  useEffect(() => {\r\n      numberService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  const addData = (event) => {\r\n    event.preventDefault()\r\n    console.log(persons)\r\n    let filterFind = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())\r\n    if (filterFind.length === 0) {\r\n      const nameObject = {\r\n        name: newName,\r\n        phone: newNum,\r\n      }\r\n\r\n      numberService\r\n      .create(nameObject)\r\n      .then(returnPerson => {\r\n        setPersons(persons.concat(returnPerson))\r\n        setMessage(`Added ${newName}`)\r\n        setType('success')\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setType('error')\r\n        setMessage(`${error.response.data.error}`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n    } else if (window.confirm(`${newName} is already added to phonebook, replace old number with new one?`)) {\r\n      const name = newName;\r\n      const phone = newNum;\r\n      const id = filterFind[0].id;\r\n      const nameObject = { name, phone, id }\r\n      numberService\r\n      .update(id, nameObject)\r\n      .then(updatePerson => {\r\n        setPersons(persons.map(person => person.id !== nameObject.id ? person : updatePerson))\r\n        setMessage(`Updated ${nameObject.name} phone`)\r\n        setType('success')\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setType('error')\r\n        console.log(error.response)\r\n        setMessage(`${error.response.data.error}`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n      })\r\n    }\r\n  }\r\n\r\n  const deleteData = (name, id) => {\r\n    if (window.confirm(`Delete ${name}?`)) {\r\n      numberService\r\n      .deleteNumber(id)\r\n      .then(deletePerson => {\r\n        setPersons(persons.filter(person => person.id !== id))\r\n      })\r\n      .catch(error => {\r\n        setType('error')\r\n        setMessage(`Information of ${name} has already been removed from server`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n        setPersons(persons.filter(person => person.id !== id))\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePersonChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNum(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setShow(event.target.value)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} type={type}/>\r\n      <Filter handle={handleFilterChange}></Filter>\r\n      <h2>add a new</h2>\r\n      <PersonForm \r\n        handleAdd={addData} \r\n        handlePerson={handlePersonChange} \r\n        handleNumber={handleNumberChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Person \r\n        list={filterPersons}\r\n        handleDeletion={deleteData} \r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}